{"remainingRequest":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/src/views/curso/Tema1.vue?vue&type=template&id=2034ac11&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/src/views/curso/Tema1.vue","mtime":1740291062927},{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Brigadas_de_Emergencia/U3_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}